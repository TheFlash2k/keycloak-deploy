# Define services
services:
  # PostgreSQL database service
  postgres:
    image: postgres:${POSTGRES_VERSION:-latest}  # PostgreSQL image
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak  # Database name
      POSTGRES_USER: keycloak  # Database user
      POSTGRES_PASSWORD: ${POSTGRES_KEYCLOAK_PASSWORD:-keycloak}  # Database password
    volumes:
      - postgres_localdata:/var/lib/postgresql/data  # Persist database data
    networks:
      - local
    restart: always  # Restart on failure
    mem_limit: 300m  # Limit memory usage to 300MB

  # Keycloak authentication service
  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-latest}  # Keycloak image
    container_name: keycloak
    environment:
      KC_DB: postgres  # Use PostgreSQL as the database
      KC_DB_URL_HOST: postgres  # Link to the Postgres service
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${POSTGRES_KEYCLOAK_PASSWORD:-keycloak}
      KEYCLOAK_ADMIN: admin  # Default admin credentials
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY_HEADERS: xforwarded  # Support for reverse proxy headers
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_URL: http://${KEYCLOAK_DOMAIN}  # Set the Keycloak domain
    volumes:
      - ./keycloak/themes:/opt/keycloak/themes  # Mount custom themes
    networks:
      - local
    depends_on:
      - postgres  # Ensure postgres starts first
    restart: always
    mem_limit: 500m  # Limit memory usage to 500MB
    command: start  # Start Keycloak

  # Nginx reverse proxy
  nginx:
    image: nginx:${NGINX_VERSION:-latest}
    container_name: nginx
    environment:
      KEYCLOAK_DOMAIN: ${KEYCLOAK_DOMAIN}  # Nginx uses Keycloak's domain
    volumes:
      - ./nginx-local/templates:/etc/nginx/templates  # Nginx configuration
    ports:
      - 80:80  # HTTP port
    networks:
      - local
    restart: always
    mem_limit: 100m  # Limit memory usage to 100MB

# Define volumes for data persistence
volumes:
  postgres_localdata:  # PostgreSQL data volume

# Define networks for service communication
networks:
  local:
    ipam:
      config:
        - subnet: ${SUBNET:-172.16.0.0/29}  # Network subnet
